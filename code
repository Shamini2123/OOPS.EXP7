//Application Development using Exception Handling
//Write a java program to throw an exception (checked) for an employee details a If an employee name is a number, a name exception must be thrown
//b If an employee age is greater than 50, an age exception must be thrown. 
//Or else an object must be created for the entered employee details.

import java.util.Scanner;

class NameException extends Exception {
    NameException(String message) {
        super(message);
    }
}

class AgeException extends Exception {
    AgeException(String message) {
        super(message);
    }
}

class Employee {
    String name;
    int age;

    Employee(String name, int age) {
        this.name = name;
        this.age = age;
    }

    void display() {
        System.out.println("\nEmployee Created Successfully!");
        System.out.println("Name: " + name);
        System.out.println("Age: " + age);
    }
}

public class test {
    static void createEmployee(String name, int age) throws NameException, AgeException {
        
        if (name.matches("\\d+")) {
            throw new NameException("Name cannot be a number!");
        }

        
        if (age > 50) {
            throw new AgeException("Age cannot be greater than 50!");
        }

        
        Employee emp = new Employee(name, age);
        emp.display();
    }

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        try {
            System.out.print("Enter Employee Name: ");
            String name = sc.nextLine();

            System.out.print("Enter Employee Age: ");
            int age = sc.nextInt();

      
            createEmployee(name, age);

        } catch (NameException e) {
            System.out.println("\nError: " + e.getMessage());
        } catch (AgeException e) {
            System.out.println("\nError: " + e.getMessage());
        } catch (Exception e) {
            System.out.println("\nUnexpected Error: " + e.getMessage());
        } finally {
            sc.close();
        }
    }
}
